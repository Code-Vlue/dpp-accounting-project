version: 1
frontend:
  phases:
    preBuild:
      commands:
        # Use clean install with exact versions
        - npm ci
        # Echo key debug info for troubleshooting
        - echo "Environment: $NODE_ENV"
        - echo "Node version: $(node -v)"
        - echo "NPM version: $(npm -v)"
        - echo "Current directory: $(pwd)"
    build:
      commands:
        # Create standard .env.local file for build process
        - echo "NEXT_PUBLIC_COGNITO_USER_POOL_ID=$NEXT_PUBLIC_COGNITO_USER_POOL_ID" >> .env.local
        - echo "NEXT_PUBLIC_COGNITO_CLIENT_ID=$NEXT_PUBLIC_COGNITO_CLIENT_ID" >> .env.local
        - echo "NEXT_PUBLIC_COGNITO_REGION=$AWS_REGION" >> .env.local
        - echo "NEXT_PUBLIC_API_URL=https://master.d2ibw1me0nb2ns.amplifyapp.com/api" >> .env.local
        - echo "NEXT_PUBLIC_SITE_URL=https://master.d2ibw1me0nb2ns.amplifyapp.com" >> .env.local
        
        # Build the application with standalone output
        - echo "Building server-side rendered application..."
        - echo "Next.js config:"
        - cat next.config.js
        - npm run build
        
        # Verify build output structure
        - echo "Verifying build output structure..."
        - ls -la .next/
        - ls -la .next/server/ || echo "No server directory found"
        
        # Generate required server files for SSR
        - echo "Generating required server files..."
        - node ./scripts/post-build.js
        
        # Run fix scripts to ensure all required files exist
        - echo "Running fix scripts..."
        - node ./scripts/fix-required-server-files.js
        - node ./scripts/fix-trace-files.js
        
        # Verify required files exist
        - echo "Verifying required files..."
        - ls -la required-server-files.json || echo "required-server-files.json not found"
        - ls -la trace/ || echo "trace directory not found"
        - ls -la trace/server.js.nft.json || echo "server trace file not found"
        - ls -la trace/server-edge.js.nft.json || echo "server-edge trace file not found"
        
        # Create minimal trace structures if they don't exist
        - mkdir -p trace .next/trace
        - touch trace/server.js.nft.json trace/server-edge.js.nft.json
        - cp -r trace/* .next/trace/ || echo "Failed to copy trace files"
        
        # Echo trace file contents
        - echo "Trace file contents:"
        - cat trace/server.js.nft.json || echo "Cannot read server trace file"
        
        # Make the start script executable
        - chmod +x amplify-start-command.sh
        
        # Copy essential files to root for redundancy
        - cp -r .next/server server || echo "No server directory to copy"
        
        # Verify deployment readiness
        - echo "Verifying deployment readiness..."
        - ls -la required-server-files.json && echo "✅ required-server-files.json exists"
        - ls -la trace/server.js.nft.json && echo "✅ server trace file exists"
        - ls -la server.js && echo "✅ server.js exists"
    postBuild:
      commands:
        - echo "Build completed on $(date)"
        - echo "Final directory structure:"
        - find . -type f -name "*.json" | grep -E 'trace|required-server' || echo "No trace files found in final check"
  artifacts:
    # Use root directory as base to include everything
    baseDirectory: .
    files:
      # Essential configuration files
      - package.json
      - package-lock.json
      - next.config.js
      - .env.local
      - customHttp.yml
      
      # Server files
      - server.js
      - amplify-start-command.sh
      - required-server-files.json
      
      # Next.js build output
      - .next/**/*
      - public/**/*
      
      # Trace files (critical for SSR)
      - trace/**/*
      - .next/trace/**/*
      - server/**/*
      
      # Production dependencies
      - node_modules/**/*
  # Move custom headers to a separate file to avoid deprecation warnings
  cache:
    paths:
      - node_modules/**/*
      - .next/cache/**/*